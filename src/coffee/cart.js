// Generated by CoffeeScript 1.7.1
var bindCartObjs, common, getCartObjs, injectProperties, jquery, ko, vm;

jquery = require("jquery");

ko = require("knockout");

common = require("./common.coffee");

vm = {};

window.onload = function() {
  common.init();
  return getCartObjs();
};

getCartObjs = function() {
  return jquery.ajax({
    url: common.url + "/cart/goods",
    type: "POST",
    data: {
      crsf_token: common.token
    },
    success: function(res) {
      res = JSON.parse(res);
      if (res.status === 0) {
        return bindCartObjs(res.data);
      }
    }
  });
};

bindCartObjs = function(objs) {
  var obj, _i, _len;
  for (_i = 0, _len = objs.length; _i < _len; _i++) {
    obj = objs[_i];
    obj['quantity'] = ko.observable(obj.quantity);
    injectProperties(obj);
  }
  console.log(objs);
  vm.cartObjs = ko.observableArray(objs);
  ko.applyBindings(vm);
  return console.log(vm);
};

injectProperties = function(obj) {
  obj.validStatus = function() {
    var _ref;
    return (_ref = this.is_valid) != null ? _ref : {
      '': 'unvalid'
    };
  };
  obj.totalPrice = ko.pureComputed(function() {
    return this.quantity() * this.price;
  });
  obj.reduce = function() {
    return this.quantity(this.quantity() - 1);
  };
  return obj.add = function() {
    return this.quantity(this.quantity() + 1);
  };
};
